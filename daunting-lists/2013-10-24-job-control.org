* 2013/10/24 Job control

** Up to now recap

** Understanding better the command line

*** What is my command? (*which*)
*** What really is my command (*type*)
*** Optional: *hash*
*** What's going on with Dorothea's *cd*?
*** Command line expansion
*** globbing
*** Glob patterns ("*", "?")
*** Controlling expansion: quoting
*** Single quotes vs double quotes
*** Grave quotes ("`")



** File permissions

*** Shells are just operating system wrappers
*** Unix is multiuser
*** File permissions: interpreting ls -l
*** Who can do what: user, group and everybody
*** Who can do what: read, write, execute
*** Change file owner (*chown*)
*** Change file group (*chgrp*)
*** Change file permissions (*chmod*)
*** The superuser (root and you)
*** Command: *sudo*
*** Change user account: *usermod*


** Scripts sneak peek

*** Scripts: automation, productivity, reproducibility
*** Writing scripts
*** What is a loop?
*** An infinite loop script
#+begin_src bash
#!/bin/bash
while true                            # Forever...
do
    echo "My Process ID (PID) is $$"  # Show the current process id
    echo "And now we are at" `date`   # Show the time and date
    echo "Press [CTRL+C] to stop"     # Show some help
    echo "Press [CTRL+Z] to pause"    # Show more help
    echo "---------------------------------------------------------"
    sleep 1                           # Sleep 1 second
done
#+end_src


** Job control
*** Processes
*** Process status: *ps*
*** Command: *pgrep*
*** Command: *top*, *htop*, *glances*, *iotop*...
*** The process id (PID)
*** The process tree
*** Parent process, child processes
*** Why *cd* must be a builtin
*** Command *pstree*
*** Kill a process (*kill*, *pkill*)
*** Pausing a process (C-z, Control-z, ^Z)
*** Sending a process to the background (*bg*, "&" command line modifier)
*** Background process id (%BID)
*** Redirecting error (2>, 2>>, &>)
*** Sending a process to the foreground (*fg*)
*** Jobs (*jobs*)
*** Dettaching a process (*nohup*, *disown*)
*** Real-time streaming of a file: *tail -f*
*** Experiment: highly concurrent file rewrite


** Environment variables

*** Passing information to processes
*** Listing environment variables: *set* or *env*
*** Optional: All environment variables are strings
*** Variable lists (e.g. PATH) are separated by colon (:)
*** Set variable value: VARIABLE_NAME=value
*** Get variable value: $VARIABLE_NAME
*** Variable scope (*export*)

*** $EDITOR
*** $PATH
*** $PWD
*** $LOGNAME
*** $HOME
*** ...


** Bash history tweaking

*** The truth about the bash history mechanism
*** ~/.bash_history
*** Optional: sourcing
*** When is the history read and written?
*** Tweaking bash: ~/.bashrc
*** Discussion: [[http://unix.stackexchange.com/questions/1288/preserve-bash-history-in-multiple-terminal-windows][Tweaking the history mechanism behavior]]


** Notes
